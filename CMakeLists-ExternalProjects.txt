include(ExternalProject)

ExternalProject_Add(
  libjpeg-turbo

  GIT_REPOSITORY "https://github.com/libjpeg-turbo/libjpeg-turbo.git"
  GIT_TAG "dev"
  
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  
  SOURCE_DIR "${CMAKE_SOURCE_DIR}/libs/libjpeg-turbo"
  CMAKE_ARGS -DENABLE_TESTING=FALSE -ENABLE_SHARED=${BUILDINGSHAREDLIBS} -DBUILD_SHARED_LIBS=${BUILDINGSHAREDLIBS} -DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/bin
  
  TEST_COMMAND ""
)

if(${BUILD_SHARED_LIBS})
	set(LIBJPEG_TURBO_LIBRARIES 
		${CMAKE_SHARED_LIBRARY_PREFIX}jpeg${CMAKE_SHARED_LIBRARY_SUFFIX}
		${CMAKE_SHARED_LIBRARY_PREFIX}turbojpeg${CMAKE_SHARED_LIBRARY_SUFFIX}
	)
else()
	set(LIBJPEG_TURBO_LIBRARIES 
		${CMAKE_STATIC_LIBRARY_PREFIX}jpeg-static${CMAKE_STATIC_LIBRARY_SUFFIX}
		${CMAKE_STATIC_LIBRARY_PREFIX}turbojpeg-static${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
endif()


ExternalProject_Add(
  websocket_lite

  GIT_REPOSITORY "https://github.com/smasherprog/websocket_lite.git"
  GIT_TAG "master"
  
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  
  SOURCE_DIR "${CMAKE_SOURCE_DIR}/libs/websocket_lite"
  CMAKE_ARGS -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} -DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/bin
  
  TEST_COMMAND ""
)

if(${BUILD_SHARED_LIBS})
	set(WEBSOCKET_LITE_LIBRARIES 
		${CMAKE_SHARED_LIBRARY_PREFIX}websocket_lite${CMAKE_SHARED_LIBRARY_SUFFIX} 
	)
else()
	set(WEBSOCKET_LITE_LIBRARIES 
		${CMAKE_STATIC_LIBRARY_PREFIX}websocket_lite${CMAKE_STATIC_LIBRARY_SUFFIX} 
	)
endif()

ExternalProject_Add(
  input_lite

  GIT_REPOSITORY "https://github.com/smasherprog/input_lite.git"
  GIT_TAG "master"
  
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  
  SOURCE_DIR "${CMAKE_SOURCE_DIR}/libs/input_lite"
  CMAKE_ARGS -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/bin
  
  TEST_COMMAND ""
)

if(${BUILD_SHARED_LIBS})
	set(INPUT_LITE_LIBRARIES 
		${CMAKE_SHARED_LIBRARY_PREFIX}input_lite${CMAKE_SHARED_LIBRARY_SUFFIX} 
	)
else()
	set(INPUT_LITE_LIBRARIES 
		${CMAKE_STATIC_LIBRARY_PREFIX}input_lite${CMAKE_STATIC_LIBRARY_SUFFIX} 
	)
endif()

ExternalProject_Add(
  clipboard_lite

  GIT_REPOSITORY "https://github.com/smasherprog/clipboard_lite.git"
  GIT_TAG "master"
  
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  
  SOURCE_DIR "${CMAKE_SOURCE_DIR}/libs/clipboard_lite"
  CMAKE_ARGS -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/bin
  
  TEST_COMMAND ""
)

if(${BUILD_SHARED_LIBS})
	set(CLIPBOARD_LITE_LIBRARIES 
		${CMAKE_SHARED_LIBRARY_PREFIX}clipboard_lite${CMAKE_SHARED_LIBRARY_SUFFIX} 
	)
else()
	set(CLIPBOARD_LITE_LIBRARIES 
		${CMAKE_STATIC_LIBRARY_PREFIX}clipboard_lite${CMAKE_STATIC_LIBRARY_SUFFIX} 
	)
endif()
 
ExternalProject_Add(
  screen_capture_lite

  GIT_REPOSITORY "https://github.com/smasherprog/screen_capture_lite.git"
  GIT_TAG "master"
  
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  
  SOURCE_DIR "${CMAKE_SOURCE_DIR}/libs/screen_capture_lite"
  CMAKE_ARGS -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DCMAKE_INSTALL_PREFIX=${PROJECT_BINARY_DIR}/bin
  
  TEST_COMMAND ""
)
if(${BUILD_SHARED_LIBS})
	set(SCREEN_CAPTURE_LITE_LIBRARIES 
		${CMAKE_SHARED_LIBRARY_PREFIX}screen_capture_lite${CMAKE_SHARED_LIBRARY_SUFFIX}
	)
else()
	set(SCREEN_CAPTURE_LITE_LIBRARIES 
		${CMAKE_STATIC_LIBRARY_PREFIX}screen_capture_lite${CMAKE_STATIC_LIBRARY_SUFFIX}
	)
endif()

if(WIN32)
	set(SCREEN_CAPTURE_LITE_LIBRARIES 
		${SCREEN_CAPTURE_LITE_LIBRARIES}
		Dwmapi
	)
elseif(APPLE)
	find_library(corefoundation_lib CoreFoundation)
	find_library(cocoa_lib Cocoa)
	set(SCREEN_CAPTURE_LITE_LIBRARIES 
		${SCREEN_CAPTURE_LITE_LIBRARIES}
		 ${corefoundation_lib} 
		 ${cocoa_lib}
	)
else()
	find_package(X11 REQUIRED)
	if(!X11_XTest_FOUND)
 		message(FATAL_ERROR "X11 extensions are required, but not found!")
	endif()
	if(!X11_Xfixes_LIB)
 		message(FATAL_ERROR "X11 fixes extension is required, but not found!")
	endif()
	find_package(Threads REQUIRED)
	set(SCREEN_CAPTURE_LITE_LIBRARIES 
		${SCREEN_CAPTURE_LITE_LIBRARIES}
		${X11_LIBRARIES}
		${X11_Xfixes_LIB}
		${X11_XTest_LIB}
		${X11_Xinerama_LIB}
		${CMAKE_THREAD_LIBS_INIT}
	) 
endif()


