language : cpp

matrix:
  include:
    - os: osx
    - os: linux
      env: VERSION=3.8 BUILD_TYPE=Release
      compiler: clang
      dist: trusty
      sudo: required
      addons: *libcxx
      
before_install:
  # Install the newest `cmake`.
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update && brew outdated boost || brew upgrade boost && brew install fltk openssl libjpeg-turbo && brew upgrade cmake || brew install cmake;
    elif [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      wget https://cmake.org/files/v3.7/cmake-3.7.1-Linux-x86_64.sh;
      chmod u+x cmake-3.7.1-Linux-x86_64.sh;
      sudo ./cmake-3.7.1-Linux-x86_64.sh --skip-license --prefix=/usr/local;
    fi
  # Install a specific clang version.
  - if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${CC}" = "clang" ] && [ -n "${VERSION}" ]; then
      wget -nv -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -;
      sudo apt-add-repository -y "deb http://llvm.org/apt/trusty llvm-toolchain-trusty-${VERSION} main";
      sudo apt-get update -qq;
      sudo apt-get install -qq -y "clang-${VERSION}";
    fi
  # Set the correct `CXXFLAGS` environment variable.
  - if [ "${TRAVIS_OS_NAME}" = "linux" ] && [ "${CC}" = "clang" ]; then
      export CXXFLAGS="${CXXFLAGS} -stdlib=libc++";
    fi
  # Set the correct `CC` and `CXX` environment variables.
  - if [ -n "${VERSION}" ]; then
      export CC="${CC}-${VERSION}";
      export CXX="${CXX}-${VERSION}";
    fi
  - ${CXX} --version

script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl/ ..
  - cmake --build .

notifications:
  email: false
  
