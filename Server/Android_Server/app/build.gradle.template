apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = $(AndroidAPILevelNumber)
        buildToolsVersion = "$(AndroidBuildToolsVersion)"

        defaultConfig.with {
            applicationId = "com.Android_Server.Android_Server"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
        }
    }

    compileOptions.with {
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }

    android.productFlavors {
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
        create("arm8") {
            ndk.abiFilters.add("arm64-v8a")
        }
        create("x86") {
            ndk.abiFilters.add("x86")
        }
        create("x86-64") {
            ndk.abiFilters.add("x86_64")
        }
        create("all")
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'jniLibs', include: ['*.jar', '*.so'])
    $(AarDependencies)
}
task copyNativeLibs(type: Copy) {
   from '../../../../crystax-ndk-10.3.1/sources/boost/1.59.0/libs/x86/llvm-3.6/'
	into 'src/jniLibs/x86/'
	include '**/*.so'
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }


